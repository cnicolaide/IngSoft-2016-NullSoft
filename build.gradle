apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: "de.aaschmid.cpd"
apply plugin: 'findbugs'
apply plugin: "jacoco"
apply plugin: "wrapper"

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "de.aaschmid:gradle-cpd-plugin:1.0"
  }
}

task DJTestDrive(type: Jar) {
	manifest {
        attributes 'Main-Class': 'main.DJTestDrive'
    }
    baseName = 'DJTestDrive'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task BulletTestDrive(type: Jar) {
	manifest {
        attributes 'Main-Class': 'main.BulletTestDrive'
    }
    baseName = 'BulletTestDrive'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task HeartTestDrive(type: Jar) {
	manifest {
        attributes 'Main-Class': 'main.HeartTestDrive'
    }
    baseName = 'HeartTestDrive'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task AllInOneTestDrive(type: Jar) {
	manifest {
        attributes 'Main-Class': 'main.AllInOneTestDrive'
    }
    baseName = 'AllInOneTestDrive'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    mavenCentral()
}

dependencies {
	compile group: 'junit', name: 'junit', version: '4.12'
	compile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
	compile group: 'commons-collections', name: 'commons-collections', version: '3.1'
	compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
	compile group: 'org.freemarker', name: 'freemarker', version: '2.3.9'
	compile group: 'com.thoughtworks.paranamer', name: 'paranamer', version: '2.4'
	compile group: 'org.codehaus.plexus', name: 'plexus-utils', version: '1.0.4'
	compile group: 'commons-lang', name: 'commons-lang', version: '2.4'
	  compile 'com.google.guava:guava:18.0'
	  testCompile 'org.assertj:assertj-core:1.7.0'
	  testCompile 'org.jbehave:jbehave-core:3.9.5'
	  testCompile 'org.jbehave.site:jbehave-site-resources:3.1.1:@zip'
}

checkstyle {
    ignoreFailures = true
    toolVersion = '6.4.1'
    sourceSets = [sourceSets.main]
    configFile = rootProject.file("config/checkstyle/checkstyle.xml");
    showViolations = true
}

checkstyleTest {
    enabled = false
}

pmd {
    ignoreFailures = true
}

cpd {
    ignoreFailures = true
}

findbugs {
    ignoreFailures = true
    effort = "max"
    reportLevel = "low"
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(Checkstyle) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

sourceSets.test.resources.srcDir 'src/test/java'

test {
  doFirst {
    copy {
      from(zipTree(jarPath("jbehave-core"))) {
        include "style/*"
      }
      into("build/jbehave/view")

    }
    copy {
      from(zipTree(jarPath("jbehave-site-resources"))) {
        include "js/**/*"
        include "style/**/*"
        include "images/*"
      }
      into("build/jbehave/view")
    }
  }
}

def jarPath(String jarName) {
  configurations.testCompile.find({ it.name.startsWith(jarName) }).absolutePath
}

test.finalizedBy(project.tasks.jacocoTestReport)

task compilarTodo() {
compilarTodo.dependsOn(DJTestDrive)
compilarTodo.dependsOn(BulletTestDrive)
compilarTodo.dependsOn(HeartTestDrive)
compilarTodo.dependsOn(AllInOneTestDrive)
}